{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,yCAAyC;AACzC,KAAK,OAAO;AACZ,sBAAsB;AACtB,6CAA6C;AAC7C;AACA;AACA,wCAAwC;AACxC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,0DAA0D;AAC1D,sCAAsC;AACtC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6CAA6C;AAC7C,wEAAwE;AACxE,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,uDAAuD;AACvD;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,aAAa;AACb;AACA,iDAAiD;AACjD;AACA,yBAAyB;AACzB,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,kDAAkD;AAClD,WAAW;AACX,yCAAyC;AACzC;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,UAAU,EAAC,CAAC;;;;;;;;;;;;;;;;AC1GsB;AACjD;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,+DAA+D;AAC/D,6BAA6B;AAC7B,6BAA6B;AAC7B;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,iBAAiB;AACjB,wDAAwD;AACxD;AACA,0CAA0C;AAC1C,yCAAyC;AACzC,iDAAiD;AACjD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,+DAAW;AACd;AACA,wBAAwB,iCAAiC,OAAO;AAChE;AACA;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACrD0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,IAAI;AACJ;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,8DAA8D;AAC9D,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS,4DAAQ;AACjB;AACA,+BAA+B;AAC/B;AACA,oCAAoC;AACpC,UAAU,gBAAgB;AAC1B;AACA,UAAU;AACV;AACA,UAAU;AACV,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,MAAM,iDAAS;AACf;AACA,yDAAyD;AACzD,kDAAkD;AAClD;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,SAAS,kDAAU;AACnB,OAAO;AACP;AACA;AACA,iEAAe,KAAK,EAAC,CAAC;;;;;;;;;;;;;;;;;ACtEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,IAAI;AACJ;AACA,4CAA4C;AAC5C,6EAA6E;AAC7E,oCAAoC;AACpC;AACA,IAAI;AACJ;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA,iEAAe,KAAK,EAAC,CAAC;AACS,CAAC;;;;;;;;;;;;;;ACtDhC,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,kBAAkB;AAClB;AACA,+BAA+B;AAC/B,gCAAgC;AAChC,mCAAmC,WAAW,GAAG;AACjD;AACA,QAAQ;AACR,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,8BAA8B,cAAc,GAAG;AAC/C,KAAK,OAAO;AACZ,yCAAyC;AACzC;AACA;AACA,wDAAwD;AACxD,uCAAuC;AACvC;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,iCAAiC;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8BAA8B;AAC9B;AACA,mBAAmB,mBAAmB;AACtC,gDAAgD;AAChD,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,mCAAmC;AACnC,sCAAsC;AACtC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,QAAQ,OAAO;AACf;AACA;AACA;AACA,mDAAmD,OAAO,MAAM;AAChE;AACA;AACA,yCAAyC;AACzC,yBAAyB;AACzB,QAAQ;AACR,uBAAuB;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB;AACzB;AACA,QAAQ,OAAO;AACf;AACA;AACA;AACA,mDAAmD,OAAO,MAAM;AAChE;AACA,6BAA6B;AAC7B,qCAAqC;AACrC,QAAQ;AACR,uBAAuB;AACvB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA,OAAO;AACP,IAAI;AACJ;AACA,iEAAe,MAAM,EAAC,CAAC;;;;;;;;;;;;;;;ACrJvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,qCAAqC;AACrC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,IAAI;AACJ;AACA;AACA,iEAAe,IAAI,EAAC,CAAC;;;;;;;;;;;;;;ACvCrB;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,oBAAoB,IAAI;AACxB,QAAQ;AACR;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,qBAAqB;AACrB;AACA;AACA,+BAA+B;AAC/B,8CAA8C;AAC9C;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AChErB,2CAA2C;AAC3C,qCAAqC;AACrC;AACA;AACA;AACA,UAAU;AACV;AACA,OAAO;AACP;AACA,+BAA+B;AAC/B;AACA;AACA,qCAAqC;AACrC,kCAAkC;AAClC;AACA,qBAAqB;AACrB,4CAA4C,IAAI,YAAY,WAAW;AACvE;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,GAAqB;AACrB;;;;;;UCvBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACY;AACV;AACA;AACA;AACE;AACF;AACM;AAC1C;AACA;AACA;AACA,yCAAyC,yDAAS,kCAAkC;AACpF;AACA,GAAG,yDAAI;AACP,GAAG,+DAAU;AACb,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,0DAAK;AACR,GAAG,2DAAM;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG,0DAAK;AACR,CAAC,E","sources":["webpack://practice/./src/js/modules/calculator.js","webpack://practice/./src/js/modules/cards.js","webpack://practice/./src/js/modules/forms.js","webpack://practice/./src/js/modules/modal.js","webpack://practice/./src/js/modules/slider.js","webpack://practice/./src/js/modules/tabs.js","webpack://practice/./src/js/modules/timer.js","webpack://practice/./src/js/services/services.js","webpack://practice/webpack/bootstrap","webpack://practice/webpack/runtime/define property getters","webpack://practice/webpack/runtime/hasOwnProperty shorthand","webpack://practice/webpack/runtime/make namespace object","webpack://practice/./src/js/script.js"],"sourcesContent":["function calculator() {\r\n   const result = document.querySelector('.calculating__result span');\r\n   let sex, height, weight, age, ratio;\r\n\r\n   if (localStorage.getItem('sex')) { // если значение localStorage усиановлено\r\n      sex = localStorage.getItem('sex'); // то присваиваем его переменной sex\r\n   } else { // если значение localStorage не установлено\r\n      sex = 'female'; // то присваиваем переменной sex по умолчанию female\r\n      localStorage.setItem('sex', 'female'); // и записываем его в localStorage\r\n   }\r\n\r\n   if (localStorage.getItem('ratio')) { // то же самое и с ratio\r\n      ratio = localStorage.getItem('ratio');\r\n   } else {\r\n      ratio = 1.375;\r\n      localStorage.setItem('ratio', 1.375);\r\n   }\r\n\r\n   function calcTotal() { // основная функция для подсчета каллорий\r\n      if (!sex || !height || !weight || !age || !ratio) { // функция отрабатывает только при заполнении всех данных\r\n         result.textContent = '____'; // Можете придумать что угодно            \r\n         return;\r\n      }\r\n      if (sex === 'female') {\r\n         result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n      } else {\r\n         result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n      }\r\n   }\r\n\r\n   calcTotal();\r\n\r\n   function initLocalSettings(selector, activeClass) {\r\n      const elements = document.querySelectorAll(selector);\r\n\r\n      elements.forEach(elem => { // перебираем все элементы\r\n         elem.classList.remove(activeClass); // и удаляем у всех класс активности\r\n         if (elem.getAttribute('id') === localStorage.getItem('sex')) { // проверяем id и сравниваем с localStorage\r\n            elem.classList.add(activeClass); // и добавляем класс активности элементу отмеченному в localStorage\r\n         }\r\n         if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n            elem.classList.add(activeClass);\r\n         }\r\n      });\r\n   }\r\n\r\n   initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n   initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n   function getStaticInformation(selector, activeClass) {\r\n      const elements = document.querySelectorAll(selector); \r\n\r\n      elements.forEach(elem => {\r\n         elem.addEventListener('click', (e) => { // отслеживаем клики по родительскому элементу\r\n            if (e.target.getAttribute('data-ratio')) { // если у блока есть data-атрибут, то меняем data-ratio\r\n               ratio = +e.target.getAttribute('data-ratio');\r\n               localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n            } else { // или если у блока есть id, то меняем его\r\n               sex = e.target.getAttribute('id');\r\n               localStorage.setItem('sex', e.target.getAttribute('id'));\r\n            }\r\n\r\n            elements.forEach(elem => { // сначала activeClass убираем у всех элементов\r\n               elem.classList.remove(activeClass);\r\n            });\r\n\r\n            e.target.classList.add(activeClass); // и добавляем activeClass елементу на котором произошло событие\r\n\r\n            calcTotal(); // функция запускается каждый раз при каком-либо изменении пользователем данных\r\n         });\r\n      });\r\n   }\r\n\r\n   getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n   getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n   function getDynamicInformation(selector) {\r\n      const input = document.querySelector(selector);\r\n\r\n      input.addEventListener('input', () => {\r\n\r\n         if (input.value.match(/\\D/g)) { // если пользователем введено не число\r\n            input.style.border = \"1px solid red\"; // то сообщаем об этом красным border\r\n         } else {\r\n            input.style.border = 'none'; // или нет border\r\n         }\r\n         switch(input.getAttribute('id')) { // при помощи swith case проверяем в какой input кликнул пользователь\r\n            case \"height\":\r\n               height = +input.value;\r\n               break;\r\n            case \"weight\":\r\n               weight = +input.value;\r\n               break;\r\n            case \"age\":\r\n               age = +input.value;\r\n               break;\r\n         }\r\n\r\n         calcTotal(); // функция запускается каждый раз при каком-либо изменении пользователем данных\r\n      });\r\n   }\r\n\r\n   getDynamicInformation('#height');\r\n   getDynamicInformation('#weight');\r\n   getDynamicInformation('#age');\r\n}\r\nexport default calculator; // экспортируем функцию\r\n","import {getResource} from '../services/services';\r\n\r\nfunction cards() {\r\n   class MenuCard {\r\n      constructor(src, alt, title, descr, price, parentSelector, ...classes) { // добавим Rest-оператор classes\r\n         this.src = src;\r\n         this.alt = alt;\r\n         this.title = title;\r\n         this.descr = descr;\r\n         this.price = price;\r\n         this.classes = classes; // запишем Rest-оператор в свойства чтоб его можно было использовать\r\n         this.parent = document.querySelector(parentSelector); // родитель, куда передаем верстку\r\n         this.transfer = 27; // пока статический курс валют\r\n         this.changeToUAH(); // метод вызываем прямо в конструкторе\r\n      }\r\n\r\n      changeToUAH() { // метод для конвертации гривны в доллар\r\n         this.price = this.price * this.transfer;\r\n      }\r\n\r\n      render() { // метод для формирования верстки\r\n         const element = document.createElement('div'); // создаем элемент\r\n         \r\n         if (this.classes.length === 0) { // условие ксли пользователь забудет прописать класс\r\n            this.element = 'menu__item'; // если ни один элемент в классы не передан, \r\n            element.classList.add(this.element); // то установим дефолтный класс\r\n         } else { // если же есть хотя бы 1 класс, то запускаем forEach, добавляющий этот класс во все карточки\r\n            this.classes.forEach(className => element.classList.add(className));\r\n         }\r\n\r\n         element.innerHTML = `\r\n            <img src=${this.src} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n               <div class=\"menu__item-cost\">Цена:</div>\r\n               <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>\r\n         `;\r\n         this.parent.append(element);\r\n      }\r\n   }\r\n\r\n   getResource('http://localhost:3000/menu') // получаем массив с сервера\r\n      .then(data => {\r\n         data.forEach(({img, altimg, title, descr, price}) => { // объект деструктуризируем\r\n            new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            // создаем новую карточку на странице и ее рендерим\r\n         });\r\n      });\r\n}\r\n\r\nexport default cards;","import {openModal, closeModal} from \"./modal\";\r\nimport {postData} from \"../services/services\";\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n   const forms = document.querySelectorAll(formSelector);\r\n\r\n   const message = {\r\n      loading: 'img/form/spinner.svg',\r\n      success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n      failure: 'Что-то пошло не так...'\r\n   };\r\n\r\n   forms.forEach(item => { // Самое главное взять все наши формы и под каждую подвязать функцию postData\r\n      bindPostData(item);\r\n   });\r\n\r\n   function bindPostData(form) {\r\n      form.addEventListener('submit', (e) => {\r\n         e.preventDefault(); // отмена стандартной работы браузера с перезагрузкой страницы\r\n\r\n         const statusMessage = document.createElement('img'); // Для вывода сообщений создаем img \r\n         statusMessage.src = message.loading; // и добавляем ему картинку\r\n         statusMessage.style.cssText = `\r\n            display: block;\r\n            margin: 0 auto;\r\n         `;\r\n         // выводим сообщение о загрузке loading на страницу пользователя\r\n         form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n         const formData = new FormData(form); // FormData - быстрое формирование данных заполненных пользователем\r\n\r\n         const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n         // formData превращаем в массив массивов, потом в объект, который превращаем в JSON\r\n         postData('http://localhost:3000/requests', json) // отправляем json на сервер\r\n         .then(data => {\r\n            console.log(data); // выводим в консоль то что вернул сервер\r\n            showThanksModal(message.success);\r\n            statusMessage.remove(); // удаляем спинер\r\n         }).catch(() => { // обрабатываем ошибки\r\n            showThanksModal(message.failure);\r\n         }).finally(() => {\r\n            form.reset();\r\n         });\r\n      });\r\n   }\r\n\r\n   function showThanksModal(message) { \r\n      const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n            prevModalDialog.classList.add('hide'); // скрываем modal__dialog\r\n      openModal('.modal', modalTimerId);\r\n\r\n      const thanksModal = document.createElement('div'); // создаем новый контент\r\n      thanksModal.classList.add('modal__dialog'); // имеющийся в верстке .modal__dialog заменяем созданным modal__dialog\r\n      thanksModal.innerHTML = `\r\n         <div class=\"modal__content\">\r\n            <div class=\"modal__close\" data-close>×</div>\r\n            <div class=\"modal__title\">${message}×</div>\r\n         </div>\r\n      `;\r\n\r\n      document.querySelector('.modal').append(thanksModal);  // Помещаем верстку JS на страницу \r\n      setTimeout(() => {\r\n         thanksModal.remove();\r\n         prevModalDialog.classList.add('show');\r\n         prevModalDialog.classList.remove('hide');\r\n         closeModal('.modal');\r\n      }, 4000);\r\n   }\r\n}\r\nexport default forms; // экспортируем функцию\r\n","   function openModal(modalSelector, modalTimerId) { \r\n      const modal = document.querySelector(modalSelector);\r\n      modal.classList.add('show');\r\n      modal.classList.remove('hide');\r\n      // modal.classList.toggle('show');\r\n      document.body.style.overflow = 'hidden';\r\n\r\n      console.log(modalTimerId);\r\n      if (modalTimerId) { // если modalTimerId существует, то запускаем \r\n         clearInterval(modalTimerId); // если пользователь сам открыл modal, то очищаем modalTimerId\r\n      }\r\n   }\r\n\r\n   function closeModal(modalSelector) {\r\n      const modal = document.querySelector(modalSelector);\r\n      modal.classList.add('hide');\r\n      modal.classList.remove('show');\r\n      // modal.classList.toggle('show');\r\n      document.body.style.overflow = '';\r\n   }\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimerId) {\r\n   const modalTrigger = document.querySelectorAll(triggerSelector),\r\n         modal = document.querySelector(modalSelector);\r\n\r\n   modalTrigger.forEach(btn => { // перебираем псевдомассив для всех кнопок btn\r\n      btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n   });\r\n   \r\n   modal.addEventListener('click', (e) => { // Закрытие модального окна по клику в любую точку или на кнопку Esc\r\n      if (e.target === modal || e.target.getAttribute('data-close') == '') { //если клик по подложке или х, то закрываем\r\n         closeModal(modalSelector); // closeModal вызываем\r\n      }\r\n   });\r\n\r\n   document.addEventListener('keydown', (e) => { // При нажатии на Esc вызывается closeModal закрывающая модальное окно\r\n      if (e.code === \"Escape\" && modal.classList.contains('show')) {\r\n      // добавляем условие чтоб Esc не срабатывало когда модальное окно закрыто\r\n         closeModal(modalSelector);\r\n      }\r\n   });\r\n\r\n   function showModalByScrol() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n      // прокрутка страницы + видимая на мониторе окно страницы >= scrollHeight - значит пользователь долистал до конца\r\n         openModal(modalSelector, modalTimerId);\r\n         window.removeEventListener('scroll', showModalByScrol); \r\n         // после появления modal удаляем showModalByScrol чтоб modal больше не появлялось при прокрутке до конца\r\n      }\r\n   }\r\n\r\n   window.addEventListener('scroll', showModalByScrol); //если пользователь долистал до конца страницы, показываем modal\r\n}\r\nexport default modal; // экспортируем функцию по умолчанию\r\nexport {openModal, closeModal}; // экспортируем функции именованым экспортом","function slider({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) {\r\n   const slides = document.querySelectorAll(slide),\r\n      slider = document.querySelector(container),\r\n      prev = document.querySelector(prevArrow),\r\n      next = document.querySelector(nextArrow),\r\n      total = document.querySelector(totalCounter),\r\n      current = document.querySelector(currentCounter),\r\n      slidesWrapper = document.querySelector(wrapper),\r\n      slidesField = document.querySelector(field),\r\n      width = window.getComputedStyle(slidesWrapper).width; // ширина окна показа слайда\r\n\r\n   let slideIndex = 1,\r\n      offset = 0; // Чтоб смещать слайды относительно чего-то нам нужен ориентир\r\n\r\n   function plusZero(slides) { // функция для замены повторяющегося выражения\r\n      if (slides.length < 10) { // если количество слайдов меньше 10,\r\n         current.textContent = `0${slideIndex}`; // то добавляем 0 к номеру слайда\r\n         return current;\r\n      } else {\r\n         current.textContent = slideIndex; // то записываем номер слайда\r\n         return current;\r\n      }\r\n   }\r\n\r\n   plusZero(slides);\r\n\r\n   if (slides.length < 10) { // если количество слайдов меньше 10,\r\n      total.textContent = `0${slides.length}`; // то добавляем 0 к общему количеству слайдов\r\n   } else { // если количество слайдов больше 10, \r\n      total.textContent = slides.length; // то добавляем только общее количество слайдов\r\n   }\r\n\r\n   slidesField.style.width = 100 * slides.length + '%'; // поле в котором все слайды в одну строку, задаем ширину\r\n   slidesField.style.display = 'flex'; // выстраиваем слайды в одну линию\r\n   slidesField.style.transition = '0.5s all';\r\n\r\n   slidesWrapper.style.overflow = 'hidden'; // скрываем все слайды не попадающие в область видимости\r\n\r\n   slides.forEach(slide => {\r\n      slide.style.width = width; // переберем и каждому слайду установим ширину\r\n   });\r\n\r\n   slider.style.position = 'relative';\r\n\r\n   const indicators = document.createElement('ol'),\r\n         dots = [];\r\n   indicators.classList.add('carousel-indicators');\r\n   indicators.style.cssText = `\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      left: 0;\r\n      z-index: 15;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-right: 15%;\r\n      margin-left: 15%;\r\n      list-style: none;\r\n   `; // Если хотите - добавьте в стили, но иногда у нас нет доступа к стилям\r\n   slider.append(indicators); // помещаем обертку внутри слайдера\r\n\r\n   for (let i = 0; i < slides.length; i++) {\r\n      const dot = document.createElement('li'); // создаем точки\r\n      dot.setAttribute('data-slide-to', i + 1); // устанавливаем атрибут, нумерация начиная с единицы\r\n      dot.style.cssText = `\r\n         box-sizing: content-box;\r\n         flex: 0 1 auto;\r\n         width: 30px;\r\n         height: 6px;\r\n         margin-right: 3px;\r\n         margin-left: 3px;\r\n         cursor: pointer;\r\n         background-color: #fff;\r\n         background-clip: padding-box;\r\n         border-top: 10px solid transparent;\r\n         border-bottom: 10px solid transparent;\r\n         opacity: .5;\r\n         transition: opacity .6s ease;\r\n      `;\r\n      if (i == 0) { // добавляем класс активности первой точке\r\n         dot.style.opacity = 1;\r\n      }\r\n      indicators.append(dot); // аппендим точки в обертку\r\n      dots.push(dot);\r\n   }\r\n\r\n   function deleteNotDigits(str) { // функция для замены повторяющегося выражения\r\n      return +str.replace(/\\D/g, ''); // вырезание всех не цифр\r\n   }\r\n\r\n   function dotsOpasity(dots) { // функция для замены повторяющегося выражения\r\n      dots.forEach(dot => dot.style.opacity = \".5\");\r\n      dots[slideIndex-1].style.opacity = 1;\r\n      return dots;\r\n   }\r\n\r\n   next.addEventListener('click', () => {\r\n      if (offset == deleteNotDigits(width) * (slides.length - 1)) {\r\n         offset = 0; // если доходим до последнего слайда, тогда возвращаемся на первый\r\n      } else { // если не последний слайд, то добавляем смещение\r\n         offset += deleteNotDigits(width);\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // на сколько смещать слайдер\r\n\r\n      // контролируем слайд-индекс\r\n      if (slideIndex == slides.length) { // если слайдер дошел до конца\r\n         slideIndex = 1; // то необходимо переместиться в первую позицию\r\n      } else {\r\n         slideIndex++; // или увеличиваем нумерацию\r\n      }\r\n\r\n      plusZero(slides);\r\n      dotsOpasity(dots);\r\n   });\r\n\r\n   prev.addEventListener('click', () => {\r\n      if (offset == 0) { // если доходим до первого слайда, тогда возвращаемся на последний\r\n         offset = deleteNotDigits(width) * (slides.length - 1);\r\n      } else { // если не первый слайд, то добавляем смещение\r\n         offset -= deleteNotDigits(width);\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // на сколько смещать слайдер\r\n\r\n      if (slideIndex == 1) { // если слайдер дошел до начала\r\n         slideIndex = slides.length; // то необходимо переместиться в последнюю позицию\r\n      } else {\r\n         slideIndex--; // или уменьшаем нумерацию\r\n      }\r\n\r\n      plusZero(slides);\r\n      dotsOpasity(dots);\r\n   });\r\n\r\n   dots.forEach(dot => {\r\n      dot.addEventListener('click', (e) => {\r\n         const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n         slideIndex = slideTo; // индикатор счетчика слайдов\r\n         offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n         slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n         plusZero(slides);\r\n         dotsOpasity(dots);\r\n      });\r\n   });\r\n}\r\nexport default slider; // экспортируем функцию\r\n","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n   const tabs = document.querySelectorAll(tabsSelector),\r\n         tabsContent = document.querySelectorAll(tabsContentSelector),\r\n         tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n   function hideTabContent() {\r\n      tabsContent.forEach(item => {\r\n         item.classList.add('hide');\r\n         item.classList.remove('show', 'fade');\r\n      });\r\n\r\n      tabs.forEach(item => {\r\n         item.classList.remove(activeClass);\r\n      });\r\n   }\r\n\r\n   function showTabContent(i = 0) {\r\n      tabsContent[i].classList.add('show', 'fade');\r\n      tabsContent[i].classList.remove('hide');\r\n      tabs[i].classList.add('tabheader__item_active');\r\n   }\r\n\r\n   hideTabContent();\r\n   showTabContent();\r\n\r\n   tabsParent.addEventListener('click', (event) => {\r\n      const target = event.target;\r\n\r\n      if (target && target.classList.contains(tabsSelector.slice(1))) { // проверка что мы действительно кликаем в табы\r\n         tabs.forEach((item, i) => { // item - каждый таб, i - номер таба по порядку\r\n            if (target == item) {\r\n               hideTabContent();\r\n               showTabContent(i);\r\n            }\r\n         });\r\n      }\r\n   });\r\n}\r\n\r\nexport default tabs; // экспортируем функцию","function timer(id, deadLine) {\r\n\r\n   function getTimeRemaining(endtime) { // получаем разницу между дедлайн и текущей датой в милисекундах\r\n      let days, hours, minutes, seconds;\r\n      const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n      if (t <= 0) {\r\n         days = 0;\r\n         hours = 0;\r\n         minutes = 0;\r\n         seconds = 0;\r\n      } else {\r\n         days = Math.floor(t / (1000 * 60 * 60 * 24)), // полученную разницу в миллисекундах преобразовываем в дни\r\n         seconds = Math.floor((t / 1000) % 60), // полученную разницу в миллисекундах преобразовываем в секунды\r\n         minutes = Math.floor((t / 1000 / 60) % 60), // полученную разницу в миллисекундах преобразовываем в минуты\r\n         hours = Math.floor((t / (1000 * 60 * 60) % 24)); // полученную разницу в миллисекундах преобразов в часы\r\n      }\r\n\r\n      return { // возвращаем объект\r\n         'total': t,\r\n         'days': days,\r\n         'hours': hours,\r\n         'minutes': minutes,\r\n         'seconds': seconds\r\n      };\r\n   }\r\n\r\n   function getZero(num) { // Подставим ноль в показания дней и часов если там одинарное число\r\n      if (num >= 0 && num < 10) {\r\n         return `0${num}`;\r\n      } else {\r\n         return num;\r\n      }\r\n   }\r\n\r\n      function setClock(selector, endtime) { // установим часы на странице\r\n      const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000); // функция запускается каждую секунду\r\n\r\n      updateClock(); // в ручную запускаем updateClock чтоб убрать мигание верстки при запуске, \r\n      // а далее она будет сама срабатывать через 1000 мс\r\n      \r\n      function updateClock() { // функция обновления таймера каждую секунду\r\n         const t = getTimeRemaining(endtime); // расчет оставшегося времени на текущую секунду\r\n\r\n            days.innerHTML = getZero(t.days); // выводим на страницу дни, часы, минуты и секунды\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) { // если время вышло <= 0, то мы больше таймер не обновляем\r\n               clearInterval(timeInterval);\r\n            }\r\n\r\n      }\r\n   }\r\n\r\n   setClock(id, deadLine);\r\n}\r\n\r\nexport default timer; \r\n","   const postData = async (url, data) => { // настройка запроса\r\n      const res = await fetch(url, { // посылает запрос на сервер\r\n         method: \"POST\",\r\n         headers: {\r\n            'Content-type': 'application/json'\r\n         },\r\n         body: data // получает ответ от сервера\r\n      });\r\n\r\n      return await res.json(); // трансформирует ответ от сервера в JSON (возвращаем промис)\r\n   };\r\n\r\n   async function getResource(url) { // делаем запрос\r\n      let res = await fetch(url); // дожидаемся окончания запроса\r\n      \r\n      if (!res.ok) { // если что-то пошло не так\r\n         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n      }\r\n\r\n      return await res.json(); // трансформируем данные в JS объект\r\n   }\r\n\r\n   export {postData};\r\n   export {getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from './modules/tabs';\r\nimport calculator from './modules/calculator';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport timer from './modules/timer';\r\nimport {openModal} from './modules/modal';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n   const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 50000); // вызов modal через 5 сек\r\n   \r\n   tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n   calculator();\r\n   cards();\r\n   forms('form', modalTimerId);\r\n   modal('[data-modal]', '.modal', modalTimerId);\r\n   slider({\r\n      container: '.offer__slider',\r\n      nextArrow: '.offer__slider-next',\r\n      prevArrow: '.offer__slider-prev',\r\n      slide: '.offer__slide',\r\n      totalCounter: '#total',\r\n      currentCounter: '#current',\r\n      wrapper: '.offer__slider-wrapper',\r\n      field: '.offer__slider-inner'\r\n   });\r\n   timer('.timer', '2023-01-01');\r\n});"],"names":[],"sourceRoot":""}